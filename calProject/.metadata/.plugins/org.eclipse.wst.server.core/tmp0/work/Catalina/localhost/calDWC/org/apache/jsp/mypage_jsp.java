/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2025-03-20 11:33:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1742446171842L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1742470001700L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>バイバイハンバイ</title>\r\n");
      out.write("		<link href=\"css/main.css\" rel=\"stylesheet\">\r\n");
      out.write("		<link href=\"css/mypage.css\" rel=\"stylesheet\">\r\n");
      out.write("		<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("	<main>\r\n");
      out.write("	 \r\n");
      out.write("		");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<span>menu</span>\r\n");
      out.write("	<span>cart</span>\r\n");
      out.write("	<span>account</span>\r\n");
      out.write("	<!-- \r\n");
      out.write("	 <na>\r\n");
      out.write("		<li>outer</li>\r\n");
      out.write("		<li>shirts</li>\r\n");
      out.write("		<li>pants</li>\r\n");
      out.write("		<li>shoes</li>\r\n");
      out.write("		<li>accessories</li>\r\n");
      out.write("		<li>account</li>\r\n");
      out.write("	 </ul>\r\n");
      out.write("	   -->\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("	  \r\n");
      out.write("		<section>\r\n");
      out.write("			<div class=\"left-box\">\r\n");
      out.write("				<table border=\"0\">\r\n");
      out.write("					<caption>cdcd1230</caption>\r\n");
      out.write("					<colgroup>\r\n");
      out.write("						<col width=\"24%\">\r\n");
      out.write("						<col width=\"*\">\r\n");
      out.write("					</colgroup>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>name</td>\r\n");
      out.write("						<td>dongwoon</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>tel</td>\r\n");
      out.write("						<td>070 - 9005 - 5683</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>address</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						<p>〒210-0024</p>\r\n");
      out.write("						<p>神奈川県川崎市川崎区日新町9－1</p>\r\n");
      out.write("						<p>川崎センチュリープラザ1201</p>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<hr>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"right-box\">\r\n");
      out.write("				<div class=\"cart-box\">\r\n");
      out.write("					<div id=\"cart-header\" onclick=\"alert('hello')\">\r\n");
      out.write("						<h4>カート</h4>\r\n");
      out.write("						<span><i class=\"fa-solid fa-angles-right\"></i></span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div id=\"cart-list\">\r\n");
      out.write("						<div id=\"products\">\r\n");
      out.write("							<img src=\"img/167fb927c0a7f1451fbfbc6f7d143d9d51931a23.jpg\" alt=\"\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div id=\"products\">\r\n");
      out.write("							<img src=\"img/167fb927c0a7f1451fbfbc6f7d143d9d51931a23.jpg\" alt=\"\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<hr>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"order-box\">\r\n");
      out.write("					<div id=\"order-header\" onclick=\"alert('olleh')\">\r\n");
      out.write("						<h4>オーダー</h4>\r\n");
      out.write("						<i class=\"fa-solid fa-angles-right\"></i>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div id=\"order-list\">\r\n");
      out.write("						<div id=\"products\">\r\n");
      out.write("							<img src=\"img/167fb927c0a7f1451fbfbc6f7d143d9d51931a23.jpg\" alt=\"\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div id=\"products\">\r\n");
      out.write("							<img src=\"img/167fb927c0a7f1451fbfbc6f7d143d9d51931a23.jpg\" alt=\"\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("	  	</section>\r\n");
      out.write("	  \r\n");
      out.write("		");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<footer>\r\n");
      out.write(" 	<div>footer</div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("				\r\n");
      out.write("	</main>\r\n");
      out.write("	</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
